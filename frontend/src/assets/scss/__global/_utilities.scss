@use './__variables' as variables;

.wrapper {
	--_max-width: 1200px;
	--_padding-inline: var(--spc-md);

	width: min(var(--_max-width), 100% - (var(--_padding-inline) * 2));
	margin-inline: auto;
}

.breakout {
	--_max-width: 1250px;
	--_padding-inline: var(--spc-md);

	width: min(var(--_max-width), 100% - (var(--_padding-inline) * 2));
	margin-inline: auto;
}

// ---------------------------------------

// SIZING
.h-screen {
	height: 100vh;
}

.h-full {
	height: 100%;
}

.h-auto {
	height: auto;
}

.h-fit {
	height: fit-content;
}

.w-screen {
	width: 100vw;
}

.w-full {
	width: 100%;
}

.w-auto {
	width: auto;
}

.w-fit {
	width: fit-content;
}

// FLEX / GRID
.flex {
	display: flex;
}

.flex-row {
	flex-direction: row;
}

.flex-col {
	flex-direction: column;
}

.flex-wrap {
	flex-wrap: wrap;
}

.grid {
	display: grid;
	align-items: start;
}

.grid-row {
	grid-auto-flow: row;
}

.grid-col {
	grid-auto-flow: column;
}

.align-items-center {
	align-items: center;
}

.justify-content-center {
	justify-content: center;
}

.place-items-center {
	place-items: center;
}

.justify-content-between {
	justify-content: space-between;
}

// DISPLAY
.contents {
	display: contents;
}

// FONT / TEXT
.f-header {
	font-family: var(--f-header);
}

.f-subheader {
	font-family: var(--f-subheader);
}

.f-body {
	font-family: var(--f-body);
}

.f-caption {
	font-family: var(--f-caption);
}

.text-center {
	text-align: center;
}

.text-left {
	text-align: left;
}

.text-right {
	text-align: right;
}

.font-light {
	font-weight: 300;
}

.font-normal {
	font-weight: 400;
}

.font-bold {
	font-weight: 700;
}

.no-line {
	text-decoration-line: none;
}

// SPACING
@each $size in variables.$spacing-sizes {
	.p {
		&-#{$size} {
			padding: var(--spc-#{$size});
		}

		@each $side, $side-short in variables.$sides {
			&#{$side-short}-#{$size} {
				padding-#{$side}: var(--spc-#{$size});
			}
		}
	}

	.m {
		&-#{$size} {
			margin: var(--spc-#{$size});
		}

		@each $side, $side-short in variables.$sides {
			&#{$side-short}-#{$size} {
				margin-#{$side}: var(--spc-#{$size});
			}
		}
	}

	.gap {
		&-#{$size} {
			gap: var(--spc-#{$size});
		}
	}
}

.px-section {
	padding-inline: calc(var(--spc-2xl) * 2);
}

.py-section {
	padding-block: calc(var(--spc-2xl) * 2.5);
}

// COLOR
@each $size in variables.$font-sizes {
	.text {
		&-#{$size} {
			font-size: var(--fs-#{$size});
		}
	}
}

@each $color, $color-value in variables.$colors {
	.text-#{$color} {
		color: #{$color-value};

		@each $shade in variables.$color-shades {
			&--#{$shade} {
				color: var(--clr-#{$color}--#{$shade});
			}
		}
	}

	.bg-#{$color} {
		background-color: #{$color-value};

		@each $shade in variables.$color-shades {
			&--#{$shade} {
				background-color: var(--clr-#{$color}--#{$shade});
			}
		}
	}
}
